{"version":3,"sources":["Components/Player.js","Components/Song.js","Components/LibrarySong.js","Components/Library.js","Components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setSongs","currentSong","setCurrentSong","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","nextSong","length","prevSong","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","stateSongs","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fe28856.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n  currentSong,\r\n  setCurrentSong,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    // Now update the state by setting the songs\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  //EVENT HANDLERS\r\n  const playSongHandler = () => {\r\n    //Play song and pause song logic\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    //update audioref to changed input slider value\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    /*\r\n      Gets the index of the current song by comparing\r\n      the id of each song to the current songs id.\r\n    */\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    if (direction === \"skip-forward\") {\r\n      const nextSong = songs[(currentIndex + 1) % songs.length];\r\n\r\n      await setCurrentSong(nextSong);\r\n      activeLibraryHandler(nextSong);\r\n    } else if (direction === \"skip-back\") {\r\n      const prevSong =\r\n        songs[(currentIndex + (songs.length - 1)) % songs.length];\r\n\r\n      await setCurrentSong(prevSong);\r\n      activeLibraryHandler(prevSong);\r\n      if (isPlaying) audioRef.current.play();\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  //Add the styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-foward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  //HANDLERS\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((stateSongs) => stateSongs.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    /*\r\n      Check if the current song id matches an id in the library song list\r\n      by mapping over the song list data object.\r\n      If it does match then return the song list object with the active\r\n      property set to true. However if it does not match then return the\r\n      object with active set to false. \r\n    */\r\n\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    // Now update the state by setting the songs\r\n    setSongs(newSongs);\r\n\r\n    /*\r\n      First check if the song is playing.\r\n      Then make sure the result of the player is not\r\n      undefined. Only then run the play function once the track\r\n      is loaded using a promise.\r\n    */\r\n\r\n   if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            songs={songs}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Snowstalgia\",\r\n      artist: \"invention_\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: ['#D49EB6', '#1F487C'],\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=10305',\r\n    },\r\n    {\r\n      name: \"Our Star\",\r\n      artist: \"niquo\",\r\n      cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: ['#D49EB6', '#1F487C'],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10328\",\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\r\n//Import Styles\r\nimport \"./styles/app.scss\";\r\n// Import Components\r\nimport Player from \"./Components/Player\";\r\nimport Song from \"./Components/Song\";\r\nimport Library from \"./Components/Library\";\r\nimport Nav from \"./Components/Nav\";\r\n\r\n//import data\r\nimport data from \"./data\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nfunction App() {\r\n  //Ref\r\n  const audioRef = useRef(null);\r\n\r\n  //STATE\r\n  //Fetch songs\r\n  const [songs, setSongs] = useState(data());\r\n  //Get first song to start with\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  //AUDIO State and time update\r\n\r\n  //Update time state object with time of current song\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    //Calculate percentage\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\r\n\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration,\r\n      animationPercentage: animation,\r\n    });\r\n  };\r\n\r\n  //handles the opening and closing of library panel\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n  //STATE\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n\r\n  //When the song ends, skip foward to next song and play song\r\n\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div className={`App ${libraryStatus ? \"Library-Active\" : \"\"}`}>\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        audioRef={audioRef}\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying}\r\n        currentSong={currentSong}\r\n        setSongInfo={setSongInfo}\r\n        songInfo={songInfo}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        setSongs={setSongs}\r\n      />\r\n      <Library\r\n        audioRef={audioRef}\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        isPlaying={isPlaying}\r\n        setSongs={setSongs}\r\n        libraryStatus={libraryStatus}\r\n      />\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onEnded={songEndHandler}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}